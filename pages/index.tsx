import Head from "next/head";
import { startOfMonth, endOfMonth, endOfWeek, startOfWeek } from "date-fns";
import type { NextPage } from "next";
import useTotals from "./useTotals";
import * as d3 from "d3";
import Calendar from "./Calendar";
import prettyMS from "pretty-ms";

const scale = d3.scaleThreshold(
  [-5 * 3600, -3 * 3600, -1 * 3600, 0 * 3600, 1 * 3600, 2 * 3600, 3 * 3600],
  [
    "#9b2226",
    "#ca6702",
    "#ee9b00ff",
    "#e9d8a6ff",
    "#94d2bd",
    "#0a9396",
    "#005f73",
  ]
);

const Home: NextPage = () => {
  const [totals, setDates] = useTotals();
  const now = Date.now();
  const firstDayOfMonth = startOfMonth(now);
  const lastDayOfMonth = endOfMonth(now);
  const dates = d3.timeDays(
    startOfWeek(firstDayOfMonth, { weekStartsOn: 1 }),
    endOfWeek(lastDayOfMonth, { weekStartsOn: 1 })
  );

  const cumsum = d3.cumsum(totals, (b) => b.balance);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <button
          onClick={() => {
            setDates({
              start_date: firstDayOfMonth,
              end_date: lastDayOfMonth,
            });
          }}
        >
          This Month
        </button>
        <button>Week</button>
      </main>
      <section>
        <h3>
          balance:
          {prettyMS(d3.sum(totals, (t) => t.balance) * 1000)}
        </h3>
        <h3>
          Total (Logged hours):
          {(d3.sum(totals, (t) => t.logged) / 3600).toFixed(2)} hours
        </h3>
        <hr />
      </section>
      <Calendar entries={totals} dates={dates} />
      <section id="chart"></section>
    </div>
  );
};

export default Home;
